@import 'tailwindcss';
@source './';
@plugin "@iconify/tailwind4";

/* Custom States */
/* 
@custom-variant state {
	&:is(:hover, :focus-visible, :active) {
		@slot;
	}
} */

/* 1. Theme */
@import './css/1-theme/colors.css';
@import './css/1-theme/pairings.css';
@import './css/1-theme/fonts.css';
@import './css/1-theme/size.css';
@import './css/1-theme/radii.css';

/* 2. Base */
@import './css/2-base/base.css' layer(base);

/* 3. Presets */
@import './css/3-presets/icons.css' layer(components);
@import './css/3-presets/prose.css' layer(components);
@import './css/3-presets/presets.css' layer(components);

/* 4. Components */
/* @import './css/4-components/components.css' layer(components); */

/* 5. Icons */
@import './css/5-icons/icons.css' layer(components);

/* 6. Themes */
@import './css/6-themes/themes.css' layer(theming);

/* 1. Base
*************************************************/

@theme {
	/* default */
	--theme-color: var(--color-slate-500);
	--theme-color-base: var(--color-slate-500);
	--theme-color-neutral: var(--color-slate-500);
	--theme-color-primary: var(--color-blue-500);
	--theme-color-secondary: var(--color-rose-500);
	--theme-color-accent: var(--color-emerald-500);

	/* fonts */
	--theme-font: var(--font-asta);

	/* scale (default) */
	--theme-scale: 1.125;

	/* scale */
	--theme-scale-xs: 0.875; /* 14px basee */
	--theme-scale-sm: 1; /* 16px base */
	--theme-scale-md: 1.125; /* 18px base */
	--theme-scale-lg: 1.25; /* 20px base */
	--theme-scale-xl: 1.5; /* 24px base */

	/* radius */
	--theme-radius: 9999px;
	--theme-radius-box: 1.5rem;
	--theme-radius-button: 10em;

	/* container padding values */
	--spacing-container-mobile: 1rem; /* px-4 = 1rem */
	--spacing-container-desktop: 2rem; /* px-8 = 2rem */
}

@layer utilities {
	.container {
		@apply mx-auto max-w-7xl pl-[var(--spacing-container-mobile)] pr-[var(--spacing-container-mobile)] md:pl-[var(--spacing-container-desktop)] md:pr-[var(--spacing-container-desktop)];
	}

	/* Full viewport bleed */
	.bleed {
		@apply relative end-[calc(50%-50svw)] start-[calc(50%-50svw)] w-[100svw] max-w-[unset];
	}

	/* Container-aware bleed - always bleeds to container edges */
	.bleed-container {
		@apply relative left-[calc(-1*var(--spacing-container-mobile))] right-[calc(-1*var(--spacing-container-mobile))] w-[calc(100%+2*var(--spacing-container-mobile))] max-w-[unset] md:left-[calc(-1*var(--spacing-container-desktop))] md:right-[calc(-1*var(--spacing-container-desktop))] md:w-[calc(100%+2*var(--spacing-container-desktop))];
	}

	/* Mobile-only container bleed - resets to normal on desktop */
	.bleed-mobile {
		@apply relative left-[calc(-1*var(--spacing-container-mobile))] right-[calc(-1*var(--spacing-container-mobile))] w-[calc(100%+2*var(--spacing-container-mobile))] max-w-[unset] lg:static lg:left-auto lg:right-auto lg:w-auto lg:max-w-none;
	}

	/* Reset bleed back to contained */
	.bleed-unset {
		@apply relative end-full start-full w-full max-w-full;
	}
}

@utility text-md {
	font-size: 1rem;
	line-height: 1.5rem;
}

@utility bar-outside {
	@apply before:bg-primary before:absolute before:-left-4 before:bottom-2 before:top-2 before:w-2;
}

/* mask: left to right */
@utility mask-lr {
	@apply mask-alpha mask-r-from-black mask-r-to-transparent mask-l-from-black mask-l-to-transparent;
}

@utility mask-x-xs {
	@apply mask-lr mask-r-from-95% mask-l-from-95%;
}

@utility mask-x-sm {
	@apply mask-lr mask-r-from-90% mask-l-from-90%;
}

@utility mask-x-md {
	@apply mask-lr mask-r-from-80% mask-l-from-80%;
}

@utility mask-x-lg {
	@apply mask-lr mask-r-from-70% mask-l-from-70%;
}

@utility mask-x-xl {
	@apply mask-lr mask-r-from-60% mask-l-from-60%;
}

/* mask: top to bottom */
@utility mask-tb {
	@apply mask-alpha mask-b-from-black mask-b-to-transparent mask-t-from-black mask-t-to-transparent;
}

@utility mask-y {
	@apply mask-tb mask-t-from-20% mask-b-from-80%;
}

@utility text-trim {
	text-box: trim-both cap alphabetic;
}

/* Prose Utilities */
@utility prose-xs {
	--prose-scale: var(--prose-scale-xs);
}

@utility prose-sm {
	--prose-scale: var(--prose-scale-sm);
}

@utility prose-md {
	--prose-scale: var(--prose-scale-md);
}

@utility prose-lg {
	--prose-scale: var(--prose-scale-lg);
}

@utility prose-xl {
	--prose-scale: var(--prose-scale-xl);
}

/* reflect */
@utility reflect {
	-webkit-box-reflect: below 3px linear-gradient(to bottom, transparent 90%, rgba(0, 0, 0, 0.25));
}

/* reveal - using clip-path for hardware acceleration */
@utility reveal {
	transition: clip-path 700ms ease-out;
}
@utility reveal-active {
	clip-path: inset(0 0 0 0) !important;
	will-change: clip-path;
}

/* Directional reveal variants - set initial clipped state */
@utility reveal-t {
	clip-path: inset(0 0 100% 0);
}
@utility reveal-r {
	clip-path: inset(0 100% 0 0);
}
@utility reveal-b {
	clip-path: inset(100% 0 0 0);
}
@utility reveal-l {
	clip-path: inset(0 0 0 100%);
}
